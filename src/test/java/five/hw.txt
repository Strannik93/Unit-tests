*Задание 1. *Представьте, что вы работаете над разработкой простого приложения для записной книжки, которое позволяет пользователям добавлять, редактировать и удалять контакты.
Ваша задача - придумать как можно больше различных тестов (юнит-тесты, интеграционные тесты, сквозные тесты) для этого приложения. Напишите название каждого теста, его тип и краткое описание того, что этот тест проверяет.

В приложении будет:
- класс Contact с полями telephone, name, address, email и т.д. Конструктор с гетерами и сетерами.
- класс Notebook (записная книжка) с списком всех контактов и базовыми функциями: addContact, editContact, viewContact, showContacts, deleteContacts и deleteContact. Конструктор.
- контроллер, к которому подключают адаптер и базу данных в виде интерфейсов. В нем описаны функции взаймодействия между базовыми классами, пользовательским интерфейсом и базой данных.
- интерфейсы для подключения базы данных и адаптера, где написаны функции, которые должны быть реализованы в подключаемом адаптере и базе данных.
- классы для подключения базы данных и устройства вывода информации, которые имплементируют интерфейсы и реализовывают необходимые функции.

Необходимые тесты:
- юнит-тесты для проверки функции в классе Notebook.
- юнит-тесты для проверки функции в классах контроллер, с использованием заглушек.
- интеграционные тесты для проверки взаймодействия классов контроллер и подключения к базе данных / устройства вывода информации.
- сквозные тесты для проверки всего программного обеспечения на предмет зависимостей, целостности данных и связи с другими системами, интерфейсами и базами данных для проверки успешного выполнения полного производственного сценария.

*Задание 2. *Ниже список тестовых сценариев. Ваша задача - определить тип каждого теста (юнит-тест, интеграционный тест, сквозной тест) и объяснить, почему вы так решили.

Проверка того, что функция addContact корректно добавляет новый контакт в список контактов"".
Юнит-тест, так как список контактов и функция addContact находятся в одном классе.

""Проверка того, что при добавлении контакта через пользовательский интерфейс, контакт корректно отображается в списке контактов"".
Интеграционный тест, так как происходит взаймодействие модулей.

""Проверка полного цикла работы с контактом: создание контакта, его редактирование и последующее удаление"".
Происходит проверка полного цикла работы с контактом. Сквозной тест, так как проверяет работу всей системы, включая взаймодействие между пользователем и базой данных. 